<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_predicate_builder_8cs" kind="file">
    <compoundname>PredicateBuilder.cs</compoundname>
    <innerclass refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder" prot="public">KanbanApp::Core::Predicate::PredicateBuilder</innerclass>
    <innerclass refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder_1_1_parameter_rebinder" prot="private">KanbanApp::Core::Predicate::PredicateBuilder::ParameterRebinder</innerclass>
    <innernamespace refid="namespace_kanban_app_1_1_core_1_1_predicate">KanbanApp::Core::Predicate</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Linq;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Linq.Expressions;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="namespace_kanban_app_1_1_core_1_1_predicate" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">KanbanApp.Core.Predicate</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11" refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder" kindref="compound">PredicateBuilder</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16" refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder_1a5baf5c7d8752269f9bcf34c3ccfe971d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Expression&lt;Func&lt;T,<sp/>bool&gt;&gt;<sp/>True&lt;T&gt;()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param<sp/>=&gt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder_1a82ca2ed3e48a84703b28477828dadc68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Expression&lt;Func&lt;T,<sp/>bool&gt;&gt;<sp/>False&lt;T&gt;()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param<sp/>=&gt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder_1a1a00c0f632979bd0ee6412b55560a2f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Expression&lt;Func&lt;T,<sp/>bool&gt;&gt;<sp/>Create&lt;T&gt;(Expression&lt;Func&lt;T,<sp/>bool&gt;&gt;<sp/>predicate)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>predicate;<sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder_1a115b9a135dea66664eec78f9e053f3a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Expression&lt;Func&lt;T,<sp/>bool&gt;&gt;<sp/>And&lt;T&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>Expression&lt;Func&lt;T,<sp/>bool&gt;&gt;<sp/>first,<sp/>Expression&lt;Func&lt;T,<sp/>bool&gt;&gt;<sp/>second)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first.Compose(second,<sp/>Expression.AndAlso);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder_1ad5480fcce7f82112211a65a0719bec75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Expression&lt;Func&lt;T,<sp/>bool&gt;&gt;<sp/>Or&lt;T&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>Expression&lt;Func&lt;T,<sp/>bool&gt;&gt;<sp/>first,<sp/>Expression&lt;Func&lt;T,<sp/>bool&gt;&gt;<sp/>second)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first.Compose(second,<sp/>Expression.OrElse);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder_1a6ba0b9a7af11c2b3f06b716adeb490cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Expression&lt;Func&lt;T,<sp/>bool&gt;&gt;<sp/>Not&lt;T&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>Expression&lt;Func&lt;T,<sp/>bool&gt;&gt;<sp/>expression)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>negated<sp/>=<sp/>Expression.Not(expression.Body);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Expression.Lambda&lt;Func&lt;T,<sp/>bool&gt;&gt;(negated,<sp/>expression.Parameters);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder_1a64fc47038deec3bd68c2236b49c1ea88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Expression&lt;T&gt;<sp/>Compose&lt;T&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>Expression&lt;T&gt;<sp/>first,<sp/>Expression&lt;T&gt;<sp/>second,<sp/>Func&lt;Expression,<sp/>Expression,<sp/>Expression&gt;<sp/>merge)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zip<sp/>parameters<sp/>(map<sp/>from<sp/>parameters<sp/>of<sp/>second<sp/>to<sp/>parameters<sp/>of<sp/>first)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>map<sp/>=<sp/>first.Parameters</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Select((f,<sp/>i)<sp/>=&gt;<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>{<sp/>f,<sp/>s<sp/>=<sp/>second.Parameters[i]<sp/>})</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ToDictionary(p<sp/>=&gt;<sp/>p.s,<sp/>p<sp/>=&gt;<sp/>p.f);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>replace<sp/>parameters<sp/>in<sp/>the<sp/>second<sp/>lambda<sp/>expression<sp/>with<sp/>the<sp/>parameters<sp/>in<sp/>the<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>secondBody<sp/>=<sp/>ParameterRebinder.ReplaceParameters(map,<sp/>second.Body);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>merged<sp/>lambda<sp/>expression<sp/>with<sp/>parameters<sp/>from<sp/>the<sp/>first<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Expression.Lambda&lt;T&gt;(merge(first.Body,<sp/>secondBody),<sp/>first.Parameters);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder_1_1_parameter_rebinder" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder_1_1_parameter_rebinder" kindref="compound">ParameterRebinder</ref><sp/>:<sp/>ExpressionVisitor</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72" refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder_1_1_parameter_rebinder_1a49f93ef488e6449a0613f1be7d81da97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readonly<sp/>Dictionary&lt;ParameterExpression,<sp/>ParameterExpression&gt;<sp/><ref refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder_1_1_parameter_rebinder_1a49f93ef488e6449a0613f1be7d81da97" kindref="member">map</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder_1_1_parameter_rebinder_1a24a2b7cbdf3aed1268b4b362db68f9bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder_1_1_parameter_rebinder_1a24a2b7cbdf3aed1268b4b362db68f9bc" kindref="member">ParameterRebinder</ref>(Dictionary&lt;ParameterExpression,<sp/>ParameterExpression&gt;<sp/>map)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.map<sp/>=<sp/>map<sp/>??<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary&lt;ParameterExpression,<sp/>ParameterExpression&gt;();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder_1_1_parameter_rebinder_1aeab94edc2005dcc93ad40b24e3129416" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Expression<sp/><ref refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder_1_1_parameter_rebinder_1aeab94edc2005dcc93ad40b24e3129416" kindref="member">ReplaceParameters</ref>(Dictionary&lt;ParameterExpression,<sp/>ParameterExpression&gt;<sp/>map,<sp/>Expression<sp/>exp)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder_1_1_parameter_rebinder" kindref="compound">ParameterRebinder</ref>(map).Visit(exp);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder_1_1_parameter_rebinder_1a730603710666697ecfd02cedc487990a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>Expression<sp/><ref refid="class_kanban_app_1_1_core_1_1_predicate_1_1_predicate_builder_1_1_parameter_rebinder_1a730603710666697ecfd02cedc487990a" kindref="member">VisitParameter</ref>(ParameterExpression<sp/>node)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParameterExpression<sp/>replacement;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(map.TryGetValue(node,<sp/>out<sp/>replacement))</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>replacement;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base.VisitParameter(node);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/TFSProjects/KanbanApp/KanbanApp.Core/Predicate/PredicateBuilder.cs"/>
  </compounddef>
</doxygen>
